"use strict";(self.webpackChunknextjs_course=self.webpackChunknextjs_course||[]).push([[8311],{8279:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var s=n(5893),o=n(1151);const a={},r="Calling APIs in NextJS",i={id:"how/3-3 Calling APIs",title:"Calling APIs in NextJS",description:"To fetch data from APIs and display it in a Next.js application, you can use the fetch API or a library like Axios. I'll demonstrate using the fetch API for simplicity. Let's assume you want to fetch and display data from the JSONPlaceholder API.",source:"@site/docs/3-how/3-3 Calling APIs.md",sourceDirName:"3-how",slug:"/how/3-3 Calling APIs",permalink:"/nextjs-course/docs/how/3-3 Calling APIs",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/3-how/3-3 Calling APIs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SSG, ISR & SSR Implementation",permalink:"/nextjs-course/docs/how/3-2 SSG ISR SSR"},next:{title:"Using the Image Component",permalink:"/nextjs-course/docs/how/3-4 Using the Image Component"}},c={},d=[{value:"Step 1: Create a new Next.js project",id:"step-1-create-a-new-nextjs-project",level:3},{value:"Step 2: Create a component to fetch and display data",id:"step-2-create-a-component-to-fetch-and-display-data",level:3},{value:"Step 3: Use the component in a page",id:"step-3-use-the-component-in-a-page",level:3},{value:"Step 4: Run the Next.js app",id:"step-4-run-the-nextjs-app",level:3}];function l(e){const t={code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"calling-apis-in-nextjs",children:"Calling APIs in NextJS"}),"\n",(0,s.jsxs)(t.p,{children:["To fetch data from APIs and display it in a Next.js application, you can use the ",(0,s.jsx)(t.code,{children:"fetch"})," API or a library like Axios. I'll demonstrate using the ",(0,s.jsx)(t.code,{children:"fetch"})," API for simplicity. Let's assume you want to fetch and display data from the JSONPlaceholder API."]}),"\n",(0,s.jsx)(t.h3,{id:"step-1-create-a-new-nextjs-project",children:"Step 1: Create a new Next.js project"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npx create-next-app next-api-example\ncd next-api-example\n"})}),"\n",(0,s.jsx)(t.h3,{id:"step-2-create-a-component-to-fetch-and-display-data",children:"Step 2: Create a component to fetch and display data"}),"\n",(0,s.jsxs)(t.p,{children:["Create a new file ",(0,s.jsx)(t.code,{children:"components/PostList.js"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:'// components/PostList.js\nimport { useEffect, useState } from "react";\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from the JSONPlaceholder API\n    fetch("https://jsonplaceholder.typicode.com/posts")\n      .then((response) => response.json())\n      .then((data) => setPosts(data))\n      .catch((error) => console.error("API Error:", error));\n  }, []);\n\n  return (\n    <div>\n      <h2>Posts from API:</h2>\n      <ul>\n        {posts.map((post) => (\n          <li key={post.id}>{post.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PostList;\n'})}),"\n",(0,s.jsx)(t.h3,{id:"step-3-use-the-component-in-a-page",children:"Step 3: Use the component in a page"}),"\n",(0,s.jsxs)(t.p,{children:["Edit ",(0,s.jsx)(t.code,{children:"pages/index.js"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",children:'// pages/index.js\nimport PostList from "../components/PostList";\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Next.js API Example</h1>\n      <PostList />\n    </div>\n  );\n};\n\nexport default Home;\n'})}),"\n",(0,s.jsx)(t.h3,{id:"step-4-run-the-nextjs-app",children:"Step 4: Run the Next.js app"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm run dev\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Visit ",(0,s.jsx)(t.code,{children:"http://localhost:3000"})," in your browser."]}),"\n",(0,s.jsxs)(t.p,{children:["You'll see a list of posts fetched from the JSONPlaceholder API displayed on the page. The ",(0,s.jsx)(t.code,{children:"PostList"})," component fetches data from the API using the ",(0,s.jsx)(t.code,{children:"fetch"})," API and updates the state to render the posts dynamically."]}),"\n",(0,s.jsx)(t.p,{children:"Feel free to modify the example according to your API requirements. If you need to handle dynamic routes or additional data, you can explore more advanced Next.js features. Additionally, consider error handling, loading states, and other UI/UX considerations based on your application's needs."})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>r});var s=n(7294);const o={},a=s.createContext(o);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);